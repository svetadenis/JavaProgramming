Static
access modifiers
Encapsulation
Inheritance
__________________________________________________________________

static

    static blocks
        this block runs once, before anything else when the class is loaded(used) for the first time

    static import
        static import allows you to access one specific static member without giving the class name

        syntax:
            import static packageName.className.staticMember;
                or
            import static packageName.className.*;
                wildcard allows you to access all static members in that class

    static class
        nested classes can static
        this mean an object, of the outer class, does not need to be created to access the inner class

__________________________________________________________________

access modifiers

    keywords used to define the scope or visibility (where you can use/access the variables, methods, etc]

    [Most Visible] public  -> protected  -> default -> private [Least Visible]

    public: accessible everywhere in the project

    protected: accessible by the classes within the same packages and the sub classes in any package
        (second part is about inheritance, so we will come back to this)

    default: accessible within the same package
        -> default is used when no other access modifier is defined

    private: accessible only in the same class
__________________________________________________________________

Encapsulation

What is OOP?

    Object Oriented Programming: the concepts that define how an object behaves

    encapsulations allow you to hide your information from direct access. We are able to limit the access to variables by using the private keyword and allowing PUBLIC getters and setters

    getter: method used to get the value of that specific variable

    setter: method used to change/resign the value of that specific variable

    another definition: encapsulation is the grouping of data and methods into a unit
__________________________________________________________________

Inheritance

    allows a class to inherit/pass information from different classes

        + provides code re-usability and maintainability
        + good way to organize/group classes that are related

How to inherit in java?

    the extends keyword allows inheritance

terminology to describe inheritance relationship between classes:

    is - a
    Child is a Parent

    names to describe the different classes:
        parent, super, or base class: passes the information

        child, sub, or derived: gets the information

Object class

    The Object class is the parent of all classes
        - doesn't need to be defined, it is automatically inherited
            where toString method is defined
