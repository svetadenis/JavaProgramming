Office Hours Topics:

	reviewing weeks 6 & 7:
	methods
	loops

----------------------------------------------------------------------------------------

T1CharacterSet part 1 [methods, loops]

	Create a method that will accept two chars and return a String.
	Based on the given chars, output a character sequence where the first char is the starting character and the second char is the ending character for the sequence

	Note: the character sequence will go in order, so the starting char should come before the ending char. Use the ascii table is a reference

    Ex:
        ('7', 'P') -> 789:;<=>?@ABCDEFGHIJKLMNOP
        ('X', '}') -> XYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}

----------------------------------------------------------------------------------------

T1CharacterSet part 2 [methods, loops, overloading]

    Create a method (overloading the method from part 1) that has a String parameter and returns a String.
    Based on the given String a different set of characters will be returned
    use these to determine which set of characters is returned:

    uppercase -> ABCDEFGHIJKLMNOPQRSTUVWXYZ
    lowercase -> abcdefghijklmnopqrstuvwxyz
    digit -> 123456789
    special -> !"#$%&'()*+,-.

    so if the method is called with the argument "digit" then the method will return the String "123456789"

----------------------------------------------------------------------------------------

T2ColorPicker [loop, Scanner, String]

    Create a program that will allow the user to select three unique colors.
    Ask the user to enter their colors one at a time. Verify the color hasn't been selected already. If the color is unique add it to the final selection otherwise tell the user the colors should be unique and allow them to reenter a different color. The number of iterations is not fixed

    Ex flow:
        Enter color 1:
            > red
        red added
        Enter color 2:
            > red
        red is already selected
        Enter color 2:
            > green
        green added
        Enter color 3:
            > red
        red is already selected
        Enter color 3:
            > green
        green is already selected
        Enter color 3:
            > orange
        orange added

        Here are the colors you picked: red, green, orange

----------------------------------------------------------------------------------------

T3Syllables [methods, String, loops]

    Create a method that has a String parameter and returns how many syllables the given word has
        > the String given will have a "-" to separate the different syllables

    Ex:
        ja-va -> 2
        cat -> 1
        ham-bur-ger -> 3   --- traverse through the string from 0 index to last index get the char with charAT() method
        de-liv-er-y -> 4

----------------------------------------------------------------------------------------

T4SortedOrder [loop, String, method]

    Create a method that accepts a String and returns a boolean.
        return true if the given String is sorted meaning the characters are in alphabetical order
        return false if the given String is not sorted

    Ex:
        input: "abcd" --- traverse through the string from 0 index to last index get the char with charAT() method then compare to each other
        output: true

        input: "abzy"
        output: false

----------------------------------------------------------------------------------------

T5CamelCase [loop, String, method]

    create a method that will accept a String, of words separated by spaces, and return a camel case version of the String where the first letter of each word is uppercase and the rest of the word is in lowercase.

    Exception: The first word starts with a lowercase

    Ex:
        Input:
            JAVA will ruLE tHe wORLd  ---> space is the main driver in this solution, if I can locate the space then I can make next char uppercase
        Output:
            javaWillRuleTheWorld
